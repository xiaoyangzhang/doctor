package com.yhyt.health.mapper;

import com.yhyt.health.model.Doctor;
import com.yhyt.health.model.DoctorKey;
import com.yhyt.health.model.query.DoctorBlackQuery;
import com.yhyt.health.model.query.DoctorQuery;
import com.yhyt.health.model.vo.*;
import com.yhyt.health.model.vo.app.DoctorAppVO;
import com.yhyt.health.model.vo.app.UserListVo;
import org.apache.ibatis.annotations.Param;
import org.springframework.stereotype.Repository;

import java.util.List;
import java.util.Map;

@Repository
public interface DoctorMapper {
    int deleteByPrimaryKey(DoctorKey key);

    int insert(Doctor record);

    int insertSelective(Doctor record);

    Doctor selectByPrimaryKey(long id);

    DoctorVO selectDoctorInfoById(long id);

    int updateByPrimaryKeySelective(Doctor record);

    int updateByPrimaryKey(Doctor record);

    List<DoctorVO> getDoctorListPage(DoctorQuery doctorQuery);
    List<DoctorDiseaseVO> getDiseaseDoctorListPage(DoctorQuery doctorQuery);

    List<DoctorVO> getDeptDoctorList(long deptId);

    DoctorExtVO viewDoctorExtInfo(long id);

    List<DoctorExtVO> getDoctorsByDiseaseId(long diseaseId);

    List<DoctorExtVO> getDoctorDiseaseListPage(@Param("realname") String realname);

    List<Doctor> getDoctorsListByName(String name);

    List<DoctorBlacklistVO> getDoctorBlacklistListPage(DoctorBlackQuery query);

    Doctor getDoctor(Map<String, Object> map);

    Map<String, Long> getHospitalAndDeptByDoctorId(long id);

    List<Doctor> queryDoctorsByDeptId(long deptId);

    List<Doctor> getDoctorByDepartmentId(long departmentId);

    DoctorAppInfoVo selectDoctorForAppById(long id);

    DoctorAppInfoVo selectDoctorForAppByUserName(String userName);

    List<DoctorAppVO> appointmentdoctorlist(Map<String, Object> map);

    List<DoctorInfoVo> getDoctorByDepartmentIdForPatient(Long departmentId);
    Doctor queryDoctorByName(String name);
    int updateDeptIdById(Doctor doctor);

    /**
     * 根据医生所在科室id获取所属医院所在城市id
     * @param departmentId
     * @return cityId
     */
    String getCityIdBydepartmentId(final @Param("departmentId") Long departmentId);

    /**
     * 患者端根据部门id获取科室医生列表
     * @param departmentId
     * @return List<DoctorListVo>
     */
    List<UserListVo> getDoctorListVoByDepartmentId(final @Param("departmentId") long departmentId);
}